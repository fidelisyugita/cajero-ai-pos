services:
  # ---------- Backend ----------
  backend:
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cajero-backend
    env_file: .env # Load all variables
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app # Source code
      - ~/.gradle/caches:/home/gradle/.gradle/caches # Primary cache
      - ~/.m2:/root/.m2 # Optional fallback
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # # ---------- AI Service (Python) ----------
  # ai-service:
  #   build:
  #     context: ./ai-api/fastapi
  #     dockerfile: Dockerfile`
  #   container_name: cajero-ai
  #   ports:
  # - "${AI_PORT}:${AI_PORT}"
  #   volumes:
  # - ./ai-api/fastapi:/app
  # - cajero_ai_models:/app/models

  #   environment:
  #     - PYTHONUNBUFFERED=1

  # ---------- Frontend ----------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cajero-frontend
    env_file: .env
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    # depends_on:
    #   backend:
    #     condition: service_started
    volumes:
      - ./frontend:/app
      - /app/node_modules
# volumes:
#   cajero_ai_models:
# cajero_frontend_data:
